max_obstacle_height: 0.60  # assume something like an arm is mounted on top of the robot

# Obstacle Cost Shaping (http://wiki.ros.org/costmap_2d/hydro/inflation)
robot_radius: 0.20  # distance a circular robot should be clear of the obstacle (kobuki: 0.18)
# footprint: [[x0, y0], [x1, y1], ... [xn, yn]]  # if the robot is not circular

map_type: voxel

obstacle_layer:
  enabled:              true
  max_obstacle_height:  0.6
  origin_z:             0.0
  z_resolution:         0.2
  z_voxels:             2
  unknown_threshold:    15
  mark_threshold:       0<!--<node pkg="robot_localization" type="ukf_localization_node" name="ukf_continuous" clear_params="true" output="screen" required="true">-->
        <!--<remap from="odometry/filtered" to="odometry/filtered_continuous"/>-->
        <!--<remap from="set_pose" to="set_pose_continuous"/>-->
        <!--<param name="frequency" value="10"/>-->
        <!--<param name="sensor_timeout"  value="0.1"/>-->
        <!--<param name="two_d_mode" value="true"/>-->
        <!--<param name="odom_frame" value="$(arg model_name)/odom"/>-->
        <!--<param name="base_link_frame" value="$(arg model_name)/base_footprint_filter"/>-->
        <!--<param name="world_frame" value="$(arg model_name)/odom"/>-->
        <!--<param name="transform_time_offset" value="0.0"/>-->
        <!--<param name="odom0" value="odom_remapped"/> &lt;!&ndash; internal odom&ndash;&gt;-->
        <!--<rosparam param="odom0_config">[true,  true,  false, &lt;!&ndash; x y z &ndash;&gt;-->
                                        <!--false,  false,  true, &lt;!&ndash; roll pitch yaw &ndash;&gt;-->
                                        <!--true,  true,   false, &lt;!&ndash; x_vel y_vel z_vel &ndash;&gt;-->
                                        <!--false,  false,  true, &lt;!&ndash; roll_vel pitch_vel yaw_vel &ndash;&gt;-->
                                        <!--false,  false,  false] &lt;!&ndash; x_acc y_acc z_acc &ndash;&gt;-->
        <!--</rosparam>-->
        <!--<param name="imu0" value="imu_data_remapped"/>-->
        <!--&lt;!&ndash; TODO reinclude x_acc once using real turtlebot and see if it has a better IMU than Gazebo &ndash;&gt;-->
        <!--&lt;!&ndash; Because Gazebo produces constant x_acc of .2-.3 &ndash;&gt;-->
        <!--<rosparam param="imu0_config">[false,   false,  false, &lt;!&ndash; x y z &ndash;&gt;-->
                                    <!--false,   false,  true, &lt;!&ndash;  roll pitch yaw &ndash;&gt;-->
                                    <!--false,   false,  false, &lt;!&ndash;  x_vel y_vel z_vel &ndash;&gt;-->
                                    <!--false,   false,  true, &lt;!&ndash;  roll_vel pitch_vel yaw_vel &ndash;&gt;-->
                                    <!--false,    false, false] &lt;!&ndash;  x_acc y_acc z_acc &ndash;&gt;-->
        <!--</rosparam>-->
        <!--<param name="odom0_differential" value="false"/>-->
        <!--<param name="imu0_differential" value="false"/>-->
        <!--<param name="odom0_relative" value="false"/>-->
        <!--<param name="imu0_relative" value="false"/>-->
        <!--<param name="print_diagnostics" value="true"/>-->
    <!--</node>-->
  combination_method:   1
  track_unknown_space:  true    #true needed for disabling global path planning through unknown space
  obstacle_range: 2.5
  raytrace_range: 3.0
  publish_voxel_map: false
  observation_sources:  scan bump
  scan:
    data_type: LaserScan
    topic: scan
    marking: true
    clearing: true
    min_obstacle_height: 0.25
    max_obstacle_height: 0.35
  bump:
    data_type: PointCloud2
    topic: mobile_base/sensors/bumper_pointcloud
    marking: true
    clearing: false
    min_obstacle_height: 0.0
    max_obstacle_height: 0.15
  # for debugging only, let's you see the entire voxel grid

#cost_scaling_factor and inflation_radius were now moved to the inflation_layer ns
inflation_layer:
  enabled:              true
  cost_scaling_factor:  5.0  # exponential rate at which the obstacle cost drops off (default: 10)
  inflation_radius:     0.5  # max. distance from an obstacle at which costs are incurred for planning paths.

static_layer:
  enabled:              false
  

